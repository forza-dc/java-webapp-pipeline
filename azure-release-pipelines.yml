trigger:
  branches:
    include:
      - main

resources:
  pipelines:
    - pipeline: buildPipeline
      source: Java-App-1
      trigger: true

stages:
  - stage: Dev
    jobs:
      - job: DeployToDev
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - download: current
            artifact: drop
          - script: |
              curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
              sudo apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
              sudo apt-get update && sudo apt-get install terraform
            displayName: 'Install Terraform'
          - script: |
              terraform init
              terraform apply -auto-approve -var 'subscription_id=$(subscriptionId)' -var 'client_id=$(servicePrincipalId)' -var 'client_secret=$(servicePrincipalKey)' -var 'tenant_id=$(tenantId)'
            workingDirectory: Infra-Folder
            displayName: 'Provision Infrastructure'
          - task: Kubernetes@1
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: 'ForzaAzureRMConnection'
              namespace: 'dev'
              command: 'apply'
              useConfigurationFile: true
              configurationType: 'yaml'
              configuration: '$(System.DefaultWorkingDirectory)/drop/k8s/deployment.yaml'
            displayName: 'Deploy to Kubernetes'

  - stage: Prod
    jobs:
      - job: DeployToProd
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - download: current
            artifact: drop
          - script: |
              curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
              sudo apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
              sudo apt-get update && sudo apt-get install terraform
            displayName: 'Install Terraform'
          - script: |
              terraform init
              terraform apply -auto-approve -var 'subscription_id=$(subscriptionId)' -var 'client_id=$(servicePrincipalId)' -var 'client_secret=$(servicePrincipalKey)' -var 'tenant_id=$(tenantId)'
            workingDirectory: Infra-Folder
            displayName: 'Provision Infrastructure'
          - task: Kubernetes@1
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: 'ForzaAzureRMConnection'
              namespace: 'prod'
              command: 'apply'
              useConfigurationFile: true
              configurationType: 'yaml'
              configuration: '$(System.DefaultWorkingDirectory)/drop/k8s/deployment.yaml'
            displayName: 'Deploy to Kubernetes'
