trigger:
  branches:
    include:
      - main

resources:
  pipelines:
    - pipeline: buildPipeline
      source: Java-App-1
      trigger: true

stages:
  - stage: Dev
    jobs:
      - job: DeployToDev
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              targetPath: '$(Pipeline.Workspace)'

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true

          - script: |
              python -m pip install --upgrade pip
              pip install terraform
            displayName: 'Install Terraform'

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'ForzaAzureRMConnection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az login --service-principal -u $(servicePrincipalId) -p $(servicePrincipalKey) --tenant $(tenantId)
                az account set --subscription $(subscriptionId)
                terraform init
                terraform apply -auto-approve
            workingDirectory: Infra-Folder
            displayName: 'Provision Infrastructure'

          - task: Kubernetes@1
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: 'ForzaAzureRMConnection'
              namespace: 'dev'
              command: 'apply'
              useConfigurationFile: true
              configurationType: 'yaml'
              configuration: '$(Pipeline.Workspace)/drop/k8s/deployment.yaml'
            displayName: 'Deploy to Kubernetes'

  - stage: Prod
    jobs:
      - job: DeployToProd
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              targetPath: '$(Pipeline.Workspace)'

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true

          - script: |
              python -m pip install --upgrade pip
              pip install terraform
            displayName: 'Install Terraform'

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'ForzaAzureRMConnection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az login --service-principal -u $(servicePrincipalId) -p $(servicePrincipalKey) --tenant $(tenantId)
                az account set --subscription $(subscriptionId)
                terraform init
                terraform apply -auto-approve
            workingDirectory: Infra-Folder
            displayName: 'Provision Infrastructure'

          - task: Kubernetes@1
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: 'ForzaAzureRMConnection'
              namespace: 'prod'
              command: 'apply'
              useConfigurationFile: true
              configurationType: 'yaml'
              configuration: '$(Pipeline.Workspace)/drop/k8s/deployment.yaml'
            displayName: 'Deploy to Kubernetes'
